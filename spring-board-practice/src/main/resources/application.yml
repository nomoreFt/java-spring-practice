#true시에 로그백.xml 설정할 필요 업싱 스프링부트의 디버그 로그를 보게 해준다.
#로그가 너무 많아서 false
debug: false
#스프링 actuator 전체 엔드포인트 생성
management:
  endpoints:
    web:
      exposure:
        include: "*"

# path별로 로그 레벨 설정
# web.servlet은 debug:true 일 경우 request, response 디버그를 다 보여줘서 False를 하되,
# 해당 request,response만 Debug로 보고 싶을 때 사용한다.
# Hibernate 는 jpa를 사용할 때 쿼리로그는 ? 로 나오게 되는데, 그녀석을 실제 파라미터를 관찰할 수 있게 된다.
logging:
  level:
    com.my.javaspringpractice: debug
    org.springframework.web.servlet: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/board?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: test
    password: test
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    defer-datasource-initialization: true #test용 database 데이터를 초기값으로 세팅해준다. resources/data.sql
    hibernate.ddl-auto: create #entity등 자동으로 생성해준다.
    open-in-view: false #
    show-sql: true #sql쿼리 보여준다.
    properties:
      hibernate.format_sql: true #jpa 구현체에 종속된 한 줄에 나오는 sql을 포매팅
      hibernate:
        default_batch_fetch_size: 100 #Jpa에서 연관관계까 매핑되어있는 쿼리를 한번에 bulk로 select 해주는 기능 (join)
  h2.console.enabled: true #inmemory h2 의 console false
  sql.init.mode: always # data.sql을 언제 작동시킬것인가에 대한 룰

  #data:
  #  rest:
  #    detection-strategy: annotated
  #    base-path: /api

---

spring:
  config.activate.on-profile: testdb
  datasource:
    url: jdbc:h2:mem:board;mode=mysql
    driver-class-name: org.h2.Driver
  sql.init.mode: always
  test.database.replace: none # @AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE) 전역 Test 사용 @ActiveProfile("testdb") 사용시 Added connection conn0: url=jdbc:h2:mem:board user=TEST 작동

